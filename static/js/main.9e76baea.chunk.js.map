{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishDetailsComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","RenderDish","top","maxLength","len","val","length","CommentForm","state","modalOpen","toggleModal","bind","handleSubmit","this","setState","isModalOpen","values","postComment","dishId","rating","author","comment","outline","class","isOpen","toggle","onSubmit","select","model","htmlFor","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderComments","comments","DishComments","individualcomment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","required","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","md","size","offset","check","checkbox","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","About","RenderLeader","leaders","left","middle","object","body","heading","title","list","dishesFailed","errmess","payload","addDishes","addComments","promosLoading","promosFailed","addPromos","promos","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newFeedback","actions","reset","Dishes","errmes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e76baea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform : 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{item.name}</CardTitle>\r\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                            <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            \r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    //it could have been RendrMenuItems(props) directly but we know what the props are hence i could specify it this way aswell. \r\n    function RenderMenuItem({ dish, onClick }) {\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>\r\n                            {dish.name}\r\n                        </CardTitle>\r\n                    </CardImgOverlay>                       \r\n                </Link>\r\n            </Card>\r\n\r\n        );\r\n    }   \r\n\r\n    //second way of making a fucntion using arrow function of ES6\r\n    const Menu = (props) => {\r\n        \r\n        //no need for this. as functional components only have props\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        \r\n        if (props.dishes.isLoading) {\r\n            return (        \r\n            <div className=\"conatainer\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>  \r\n            );\r\n        }\r\n\r\n        \r\n        else if (props.dishes.errMess) {\r\n            return (\r\n                <div className=\"conatainer\">\r\n                    <div className=\"row\">\r\n                        <h4>\r\n                            {props.errMess}\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else\r\n        {\r\n            return ( \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">    \r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home </Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction RenderDish({dish}) {\r\n    \r\n    return (\r\n    <FadeTransform\r\n        in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n    }}>\r\n        <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </FadeTransform>\r\n\r\n    );\r\n}\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component \r\n{\r\n      \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);    \r\n    }\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Button onClick={this.toggleModal} outline>\r\n                    <span class=\"fa fa-pencil\"></span> Submit Comment\r\n                </Button>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody >\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label className=\"col-12\">\r\n                                    Rating\r\n                                </Label>\r\n                                <Col className=\"col-12\">\r\n                                    <Control.select model=\".rating\" name=\"contactType\" \r\n                                    className=\"form-control\" >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" className=\"col-12\">Your name</Label>\r\n                                <Col className=\"col-12\">\r\n                                    <Control.text model=\".author\" id=\"name\" \r\n                                    name=\"name\" \r\n                                    placeholder=\"Enter your name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        minLength: 'Must be greater than 2 charecters',\r\n                                        maxLength: \"Enter atleats 15 charectors\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" className=\"col-12\"> Comment </Label>\r\n                                <Col className=\"col-12\" >\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" \r\n                                    name=\"comment\" \r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" \r\n                                    />         \r\n                                                           \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col className=\"col-auto\">\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nfunction RenderComments({comments , postComment , dishId}) {\r\n    \r\n    const DishComments = comments.map((individualcomment) => {\r\n        return (\r\n            <Stagger in>\r\n                <Fade in>\r\n                    <div key={individualcomment.id}>\r\n                        <br />\r\n                        <p>\r\n                            {individualcomment.comment}\r\n                            <br />\r\n                            -- {individualcomment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(individualcomment.date)))}\r\n                        </p>\r\n                    </div>\r\n                </Fade>    \r\n            </Stagger>\r\n\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className='col-12 col-md-5 m-1'>\r\n            <h4>\r\n                Comments\r\n            </h4>\r\n            {DishComments} \r\n            <CommentForm dishId = {dishId} postComment = {postComment} />\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n        \r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if(props.isLoading) {\r\n        return (\r\n            <div className=\"conatainer\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"conatainer\">\r\n                <div className=\"row\">\r\n                    <h4>\r\n                        {props.errMess}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        );\r\n \r\n    }\r\n    else \r\n    { \r\n        const dish = props.dish;\r\n\r\n        if(dish!=null) \r\n        {\r\n        \r\n            return(\r\n                <div className='container'>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">    \r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/menu'> Menu </Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active> {props.dish.name}  </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <h3> {props.dish.name} </h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish = {props.dish} />\r\n                        </div>\r\n                        <RenderComments comments = {props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} //this is the id of dish for which the comment is added which was the last property left unassigned fro the comment object.\r\n                        />\r\n                    </div>\r\n                </div>             \r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport {Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => (val) && (val.length >= len);\r\n    const isNumber = (val) => !isNaN(Number(val));\r\n    const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //refer to header component for similiar statement as the two below....\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        }\r\n    \r\n    \r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n    \r\n                <div className=\"row\">\r\n                \r\n                    <div className=\"col-12\">    \r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home </Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact us</h3>\r\n                        <hr />\r\n                    </div>\r\n                \r\n                </div>\r\n    \r\n                <div className=\"row row-content\">\r\n                \r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\"> <i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className='col-12 col-md-9'>\r\n                        <br />\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                {/* we have to use htmlFor instead of regular for as for is a javascript */}\r\n                                <Label htmlFor=\"firstname\" md={2}>First name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 charecters',\r\n                                        maxLength: \"Enter atleats 15 charectors\"\r\n                                    }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" \r\n                                    name=\"lastname\" \r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 charecters',\r\n                                        maxLength: \"Enter atleats 15 charectors\"\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\" >\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" \r\n                                    name=\"telnum\" \r\n                                    placeholder=\"Telephone number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(10), maxLength: maxLength(10), isNumber\r\n                                    }}\r\n                                    />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Enter a valid phone number',\r\n                                        maxLength: \"Enter a valid phone number\",\r\n                                        isNumber: 'Phone number these days are NUMBERS indeed'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" \r\n                                    name=\"email\" \r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    />\r\n                                    \r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Must be a valid email'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6,offset: 2}}>\r\n                                    <div className='form-check'>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\" /> \r\n                                            {' '} <strong>May we conatct you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3,offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                    className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" \r\n                                    name=\"message\" \r\n                                    rows=\"12\"\r\n                                    className=\"form-control\" \r\n                                    />         \r\n                                                           \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React , { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, \r\n    Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        //this is to facilitate the fact that we can use toggleNav as variable or else arrow fucntion could have been invoked .\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n          this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n          });\r\n      }\r\n\r\n      handleLogin(event) {\r\n            this.toggleModal();\r\n            alert(\"Username : \" + this.username.value + \" Password : \" + this.password.value + \" Remember me : \"\r\n            + this.remember.checked);\r\n            event.preventDefault();\r\n      }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <i className=\"fa fa-sign-in fa-lg\"></i>&nbsp;Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                \r\n                {/* in the modal tag toggle attribute allows that whenevr we click on anywhere outside the modal the modal closes */}\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\r\n                    {/* in the modal header toggle attribute automatically speciefies a cross at top of the modal to close it */}\r\n                    {/* and on button it allows one to open the modal by clicking on it */}\r\n\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody >\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                    innerRef={(input) => this.remember = input} />\r\n                                    Remember me \r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>   \r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader(props) {\r\n        const leader = props.leaders;\r\n        return (\r\n            <Stagger in>\r\n                <Fade in>    \r\n                    <div key={leader.id} className=\"col-12 mt-5\">\r\n                        <Media>\r\n                                <Media left middle>\r\n                                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                </Media>\r\n                            <Media body className=\"ml-5\">\r\n                                <Media heading>\r\n                                    {leader.name}\r\n                                </Media>\r\n                                <p>\r\n                                    {leader.designation}\r\n                                </p>\r\n                                <p>{leader.description}</p>\r\n                            </Media>\r\n                        </Media>\r\n                    </div>\r\n                </Fade>\r\n            </Stagger>\r\n        );\r\n\r\n    }\r\n    \r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n            if (props.leaders.isLoading) {\r\n                return (        \r\n                <div className=\"conatainer\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>  \r\n                );\r\n            }\r\n    \r\n            \r\n            else if (props.leaders.errMess) {\r\n                return (\r\n                    <div className=\"conatainer\">\r\n                        <div className=\"row\">\r\n                            <h4>\r\n                                {props.errMess}\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n    \r\n            else {\r\n                return (\r\n                    <RenderLeader leaders={leader} />         \r\n                )\r\n            }\r\n            \r\n    });\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-9 col-md-12\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12 col-sm-9 col-md-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes'; //imports all from this file.\r\nimport { baseUrl } from '../shared/baseUrl'; \r\n\r\nexport const addComment =(comment) => ({\r\n    //all of this is returned\r\n    type: ActionTypes.ADD_COMMENT,\r\n    //this is the stuff actually returned object\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    //start of post request\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n      //endof post comment\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  //all of this is returned\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  //this is the stuff actually returned object\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname, \r\n    lastname: lastname,\r\n    telnum:telnum, \r\n    email:email, \r\n    agree:agree, \r\n    contactType:contactType, \r\n    message:message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  //start of post request\r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .then(response => alert(JSON.stringify(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n    //endof post comment\r\n};\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } \r\n        else \r\n        {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailsComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent'; \r\nimport Footer from './FooterComponent';\r\nimport About from \"./AboutComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }    \r\n}\r\n\r\n//dispatch will be recieved automotically by using connect at the bottom\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(\r\n    postFeedback(firstname, lastname, telnum, email, agree, contactType, message)\r\n    ),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {  \r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading= {this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n      />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          \r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n      />\r\n      );\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} /> } />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n              postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>  \r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps , mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errmes: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading:false, errmes: null, dishes: action.payload}\r\n            \r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading:true, errmes: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading:false, errmes: action.payload, dishes: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => \r\n{\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch(action.type) {\r\n        \r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,leaders: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {  \n    return (\n      <Provider store={store}>  \n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    \r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders ,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}